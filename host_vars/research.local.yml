# default variables for host research.local
python_3_path: /usr/bin/python3
python_2_path: /usr/bin/python
ansible_user: jonathanmorgan
# use python 3 for both CentOS 7 and 8.
ansible_python_interpreter: "{{ python_3_path }}"
# ansible_become: yes
ansible_become_user: root
ansible_become_password: !vault |
          $ANSIBLE_VAULT;1.2;AES256;dev
          39323463633961373564303438366439333734656662383337623833663837393932303138393838
          3839333563303364323362393063656466306237393132340a343364653962613935626134646462
          36333031633639633034616531666465343434653536636532393933613634616234376635343538
          3935353466623761380a306564643635343432343166326236663761393931396431616637306535
          3863

# pip
python_2_pip_executable: "/usr/bin/pip2"
python_3_pip_executable: "/usr/local/bin/pip3"
miniconda3_pip_executable: "/opt/miniconda3/bin/pip3"
# use python 3 for both CentOS 7 and 8.
pip_executable: "{{ python_3_pip_executable }}"

# configuration
server_host_name: research
server_name: "{{ server_host_name }}.local"
server_ip_address: 172.16.111.134
server_centos_version: "8"
# if CentOS 8, use dnf. If CentOS 7, use yum.
server_centos_package_manager: "dnf" # "yum" or "dnf"
ansible_user_home_folder: /home/{{ ansible_user }}
work_folder: "{{ ansible_user_home_folder }}/work"
log_folder: "{{ ansible_user_home_folder }}/logs"
server_webroot_folder: /var/www/html
server_ssl_certificate_path: ""
server_ssl_private_key_path: ""

# apache configuration
apache_server_ssl_site_config: ssl

# virtualenvwrapper configuration
virtualenv_parent_folder: "{{ ansible_user_home_folder }}"
virtualenv_folder: "{{ virtualenv_parent_folder }}/.virtualenvs"
virtualenv_project_folder: "{{ work_folder }}/vew-projects"

# miniconda configuration
#miniconda_python_version: "3.9"

#=========================================================#
# mod_wsgi configuration - defaults in:
#     - roles/mod_wsgi/defaults/main.yml
#=========================================================#

# install mod_wsgi
#mod_wsgi_action: "install"  # "clean" to just remove, "install" to "clean", then build and install.
#mod_wsgi_version: 4.9.0
#miniconda_python_version: "3.9"
#miniconda_python_version_no_dot: "39"
#python_home_path: /opt/miniconda3
#compile_python_env_path: ""

# if you set compile_python_env_path, then you must override
#     mod_wsgi_python_bin_path to contain the path to the python executable in
#     your target conda env. Example:
#mod_wsgi_python_bin_path: "{{ compile_python_env_path }}/bin/python{{ miniconda_python_version }}"

# installation type
#mod_wsgi_install_type_source: "source"
#mod_wsgi_install_type_pip: "pip"
#mod_wsgi_install_type: "{{ mod_wsgi_install_type_source }}"

#=========================================================#
# database configuration - defaults in:
#     - roles/mysql/defaults/main.yml
#     - roles/postgresql_conda/defaults/main.yml
#     - roles/postgresql_rpm/defaults/main.yml
#=========================================================#

# postgresql configuration
# ubuntu 16.04
#server_pgsql_version: "9.5"
# ubuntu 18.04
#server_pgsql_version: "10"
# ubuntu 20.04
server_pgsql_version: "12"
server_pgsql_listen_addresses: "localhost,127.0.0.1,{{ server_ip_address }},{{ server_name }}"
server_pgsql_admin_user: "{{ ansible_user }}"
server_pgsql_admin_password: "{{ ansible_become_password }}"
server_pgsql_python_package: psycopg2

# server type can be "mariadb" or "mysql"
server_mysql_type: "mysql"

# MariaDB configuration
server_mariadb_bind_address: "::"
server_mariadb_root_password: "{{ ansible_become_password }}"
server_mariadb_admin_user: "{{ ansible_user }}"
server_mariadb_admin_password: "{{ ansible_become_password }}"

# MySQL configuration
server_mysql_bind_address: "::"
server_mysql_root_password: "{{ ansible_become_password }}"
server_mysql_admin_user: "{{ ansible_user }}"
server_mysql_admin_password: "{{ ansible_become_password }}"
server_mysql_version: "57" # or "80"

#=========================================================#
# R configuration (TK) - defaults in:
#     - roles_todo/r/defaults/main.yml
#=========================================================#

#r_apt_deb_ubuntu_version_path: "{{ server_ubuntu_version_code_name }}-cran{{ r_version_number }}"
r_apt_deb_ubuntu_version_path: "{{ server_ubuntu_version_code_name }}"
# R 4.0:
r_version_number: "40"
r_marutter_version_number: "4.0"
# R 3.5:
#r_version_number: "35"
#r_marutter_version_number: "3.5"

# RStudio server configuration
#rstudio_version: 1.3.959

#=========================================================#
# Jupyterhub configuration - defaults in:
#     - roles/jupyterhub_conda/defaults/main.yml
#=========================================================#

#jupyterhub_config_folder: /etc/jupyterhub
#jupyterhub_pip_executable: "{{ miniconda3_pip_executable }}"
# to generate: openssl rand -hex 32
# - from https://jupyterhub.readthedocs.io/en/stable/getting-started/security-basics.html#cookie-secret
jupyterhub_configproxy_auth_token: 8da752f8de9494b495aaa619bb5c2c8a7a163a0643b91fb57ec0ff9e0392ec85
jupyterhub_proxy_command_path: ""
jupyterhub_admin_user_list: "'{{ ansible_user }}'"
jupyterhub_whitelist_list: "'{{ ansible_user }}'"
jupyterhub_ssl_certificate_path: "{{ server_ssl_certificate_path }}"
jupyterhub_ssl_private_key_path: "{{ server_ssl_private_key_path }}"

#jupyterhub_proxy_command_path: "/usr/local/bin/configurable-http-proxy"

#=========================================================#
# django project configuration - defaults in:
#     - roles/django_project/defaults/main.yml
#=========================================================#

# ==> django project basics
django_project_name: research
#django_project_base_folder_path: "{{ work_folder }}/django/{{ django_project_name }}"
django_project_base_folder_path: "/opt/django/{{ django_project_name }}"
django_project_folder_path: "{{ django_project_base_folder_path }}/{{ django_project_name }}"
django_db_package: "{{ server_pgsql_python_package }}"
#django_install_version: "3.2"
#django_install_version_filter: "<4.0"

# ==> django python environment type - "conda", "virtualenv" to start
#python_env_type_conda: "conda"
#python_env_type_virtualenv: "virtualenv"
#django_python_env_type: "{{ python_env_type_virtualenv }}"

# for older versions of django, it is "django-admin.py" (default). For newer (post-3.2?) it is just "django-admin".
#django_admin_command: "django-admin.py"
#django_admin_command: "django-admin"

# ==> django project virtualenv
#django_virtualenv_from_env: "{{ python_base_path }}"
#django_virtualenv_from_env_bin: "{{ python_base_bin_path }}"
#django_virtualenv_from_env_python: "{{ python_base_python_executable }}"  # python executable where virtualenv and virtualenvwrapper are installed, used to create virtualenv.
#django_virtualenv_home_path: "{{ virtualenv_folder }}"
#django_virtualenv_name: "{{ django_project_name }}"
#django_virtualenv_path: "{{ django_virtualenv_home_path }}/{{ django_virtualenv_name }}"
#django_virtualenv_bin_path: "{{ django_virtualenv_path }}/bin"
#django_virtualenv_python_version: "{{ python_base_version }}"  # major.minor, no worry about part after that (so for 3.7.7, just use 3.7)

# ==> django project conda environment
#django_conda_from_env: "{{ python_base_path }}"
#django_conda_from_env_bin: "{{ python_base_bin_path }}"
#django_conda_from_env_python: "{{ python_base_python_executable }}"  # python executable where conda is installed, used to create conda environment.
#django_conda_env_home_path: "{{ django_project_base_folder_path }}"
#django_conda_env_name: "conda_env"
#django_conda_env_path: "{{ django_conda_env_home_path }}/{{ django_conda_env_name }}"
#django_conda_env_bin_path: "{{ django_conda_env_path }}/bin"
#django_conda_env_python_version: "{{ python_base_version }}"  # major.minor, no worry about part after that (so for 3.7.7, just use 3.7)
#django_conda_env_python_install_version: "{{ django_conda_env_python_version }}"
#django_conda_env_init_packages: "python={{ django_conda_env_python_install_version }}"
##django_conda_env_init_packages: ""

# ==> django project paths
#django_config_folder_path: "{{ django_project_folder_path }}/{{ django_project_name }}"
#django_logs_folder_path: "{{ django_project_base_folder_path }}/logs"
#django_log_file_path: "{{ django_logs_folder_path }}/django-{{ django_project_name }}.log"
#django_static_folder_path: "{{ server_webroot_folder }}/static"
#django_settings_import: "{{ django_project_name }}.settings"
#django_project_folder_mode: "777"
django_db_name: "{{ django_project_name }}"
django_db_username: "django_user"
django_db_password: "{{ ansible_become_password }}"
django_db_host: "localhost"
django_db_port: "5432"
django_superuser_username: "{{ ansible_user }}"
django_superuser_password: "{{ ansible_become_password }}"
django_superuser_email: ""

# ==> django setup control variables
#django_setup_folders: true
#django_install_os_packages: true
#django_configure_apache: true
#django_update_system_jupyter: true

# phd work
#include_phd_work: false