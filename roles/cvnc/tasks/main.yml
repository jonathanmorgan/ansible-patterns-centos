---
# This playbook will set up the CVNC web application.
# NOTE: uses variables being set in defaults/main.yml to tell when to do steps.
#     Some steps will need to be done first, variables set based on external
#     work, then re-run again.

#------------------------------------------------------------------------------#
# Create a user for the application.
#------------------------------------------------------------------------------#

- name: Create SSH keys for ansible user if not already there.
  user:
    name: "{{ansible_user}}"
    state: "present"
    generate_ssh_key: yes
    ssh_key_bits: 4096
    ssh_key_file: .ssh/id_rsa

# EXTERNAL: add public key to authorized_keys on server, then:
# - ssh into server from command line as user cvnc once, to verify SSH stuff: ssh 205.145.140.65
# - in defaults/main.yml, set "do_git: true".

# set up directories

- name: make {{ project_name }} home
  file:
    path: "/home/{{ ansible_user }}/work/{{ project_name }}"
    state: directory

- name: make sure there is a django folder in {{ project_name }} home
  file:
    path: "/home/{{ ansible_user }}/work/{{ project_name }}/django"
    state: directory

- name: make sure there is a django/logs folder in {{ project_name }} home
  file:
    path: "/home/{{ ansible_user }}/work/{{ project_name }}/django/logs"
    state: directory

- name: make sure there is a backups folder in {{ project_name }} home
  file:
    path: "/home/{{ ansible_user }}/work/{{ project_name }}/backups"
    state: directory

# use git to retrieve (might have to just do this manually):

# - webroot repo: ssh://project_host_username@{{ project_host_url }}/home/cvnc/git/webroot.git
- name: clone webroot
  git:
    repo: ssh://project_host_username@{{ project_host_url }}/home/cvnc/git/webroot.git
    dest: "/home/{{ ansible_user }}/work/{{ project_name }}/webroot"
  when: do_git == true

# - django repo: ssh://project_host_username@{{ project_host_url }}/home/cvnc/git/django-apps.git
- name: clone django repo
  git:
    repo: ssh://project_host_username@{{ project_host_url }}/home/cvnc/git/django-apps.git
    dest: "/home/{{ ansible_user }}/work/{{ project_name }}/django/django-apps"
  when: do_git == true

# - cf-components repo: ssh://project_host_username@{{ project_host_url }}/home/cvnc/git/cf-components.git
- name: clone cf-components repo
  git:
    repo: ssh://project_host_username@{{ project_host_url }}/home/cvnc/git/cf-components.git
    dest: "/home/{{ ansible_user }}/work/{{ project_name }}/webroot/cf-components"
  when: do_git == true

#------------------------------------------------------------------------------#
# cvnc mysql setup
#------------------------------------------------------------------------------#

# MANUAL
# - download database backup to ~/backups and gunzip.
# - update defaults/main.yml:
#     - db_dump_file_name
#     - do_db: true

# create cvnc database
- name: Create database with name '{{ db_name }}''
  mysql_db:
    login_user: root
    login_password: "{{ server_mysql_root_password }}"
    name: "{{ db_name }}"
    state: present
  when: do_db == true

# check if {{ db_user_name }} MySQL user created.
- name: check if user {{ db_user_name }} exists
  shell: mysql -u root -p{{ server_mysql_root_password }} -e 'SELECT DISTINCT User FROM mysql.user;' | grep {{ db_user_name }}
  register: mysql_user_exists_check
  failed_when: mysql_user_exists_check.rc == 2
  when: do_db == true

# To see detailed output
- debug:
    var: mysql_user_exists_check
  when: do_db == true

# create {{ db_user_name }} mysql user
- name: Create MySQL user {{ db_user_name }}
  become: yes
  become_user: root
  mysql_user:
    login_user: root
    login_password: "{{ server_mysql_root_password }}"
    name: "{{ db_user_name }}"
    password: "{{ db_password }}"
    host: "{{ item }}"
    priv: 'cvnc.*:ALL'
    state: present
  with_items:
    - ::1
    - 127.0.0.1
    - "localhost"
  when:
    - do_db == true
    - mysql_user_exists_check.rc == 1
    - mysql_user_exists_check.stdout == ""
  notify: restart mysql
  tags: mysql

# import database
- name: Import database data.
  mysql_db:
    login_user: "{{ db_user_name }}"
    login_password: "{{ db_password }}"
    name: cvnc
    state: import
    target: /home/{{ ansible_user }}/work/{{ project_name }}/backups/{{ db_dump_file_name }}
  when: do_db == true

#------------------------------------------------------------------------------#
# python
#------------------------------------------------------------------------------#

# MANUAL - install miniconda 3 using the "miniconda3" role, then come back.

#------------------------------------------------------------------------------#
# based on python and django notes: https://docs.google.com/document/d/1ebH1QiV_9vxNhAT1YvVyuTRAgzc6tD1N9g2lklTIQl0/edit?usp=sharing)


#------------------------------------------------------------------------------#
# configure apache
#------------------------------------------------------------------------------#


#------------------------------------------------------------------------------#
# mod wsgi?
#------------------------------------------------------------------------------#
