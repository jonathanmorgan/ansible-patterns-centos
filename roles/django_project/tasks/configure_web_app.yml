---
# These tasks configure django web applications.

# put wsgi.py in place
- name: put wsgi.py in place
  template:
    src: wsgi.py.j2
    dest: '{{ django_project_folder_path }}/{{ django_project_name }}/wsgi.py'

# put urls.py in place
- name: put urls.py in place
  template:
    src: urls.py.j2
    dest: '{{ django_project_folder_path }}/{{ django_project_name }}/urls.py'

# add django app to apache conf.
- name: add django app to apache conf.
  become: yes
  become_user: root
  template:
    src: django-research.conf.j2
    dest: '/etc/httpd/conf.d/django-{{ django_project_name }}.conf'
  notify: restart httpd
  when: django_configure_apache == true

# --> give apache user access to virtualenv

# add apache user to ansible user group.

# change permissions on ansible user's home folder to 750.

# troubleshooting:
# - https://docs.djangoproject.com/en/3.0/howto/deployment/wsgi/modwsgi/
# - https://stackoverflow.com/questions/55066782/no-module-named-encodings-error-when-deploying-django-app-on-apache-with-mod
# - 

# --> static files

# create static folder
- name: make sure there is a static folder
  become: yes
  become_user: root
  file:
    path: "{{ django_static_folder_path }}"
    state: directory
    mode: 0777

# collect static
- name: run `python manage.py collectstatic`
  django_manage:
    app_path: "{{ django_project_folder_path }}"
    command: collectstatic --noinput
    virtualenv: "{{ django_virtualenv_path }}"

# touch wsgi.py to restart wsgi
- name: touch wsgi.py to restart wsgi
  become: yes
  become_user: root
  file:
    path: "{{ django_project_folder_path }}/{{ django_project_name }}/wsgi.py"
    state: touch

#- name: Install http and php etc
#  yum: name={{ item }} state=present
#  with_items:
#   - httpd
#   - php
#   - php-mysql
#   - git
#   - libsemanage-python
#   - libselinux-python
#
#- name: insert iptables rule for httpd
#  lineinfile: dest=/etc/sysconfig/iptables create=yes state=present regexp="{{ httpd_port }}" insertafter="^:OUTPUT "
#              line="-A INPUT -p tcp  --dport {{ httpd_port }} -j  ACCEPT"
#  notify: restart iptables
#
#- name: http service state
#  service: name=httpd state=started enabled=yes
#
#- name: Configure SELinux to allow httpd to connect to remote database
#  seboolean: name=httpd_can_network_connect_db state=true persistent=yes
#  when: sestatus.rc != 0

# SELINUX - it is unhappy, just do this... "setsebool -P httpd_enable_homedirs 1"
- name: Configure SELinux to allow httpd to access homedirs
  become: yes
  become_user: root
  seboolean: name=httpd_enable_homedirs state=true persistent=yes

# and this: setsebool -P httpd_read_user_content 1
- name: Configure SELinux to allow httpd to access user files
  become: yes
  become_user: root
  seboolean: name=httpd_read_user_content state=true persistent=yes
