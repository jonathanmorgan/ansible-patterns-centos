# Either;
# - use existing certificates whose paths have been prvided.
# - generate and use self-signed certificates.

#------------------------------------------------------------------------------#
# ==> Use existing certificates

# add certificate to jupyterhub config.
- name: add certificate to jupyterhub config.
  become: yes
  become_user: root
  lineinfile:
    path: '{{jupyterhub_config_folder}}/jupyterhub_config.py'
    line: "c.JupyterHub.ssl_cert = '{{ jupyterhub_ssl_certificate_path }}'"
  when: jupyterhub_ssl_certificate_path != ""
  
# add private key to jupyterhub configuration.
- name: Add private key to jupyterhub configuration.
  become: yes
  become_user: root
  lineinfile:
    path: '{{jupyterhub_config_folder}}/jupyterhub_config.py'
    line: "c.JupyterHub.ssl_key = '{{ jupyterhub_ssl_private_key_path }}'"
  when: jupyterhub_ssl_private_key_path != ""

#------------------------------------------------------------------------------#
# ==> generate self-signed certificates

# copy default SSL cert and key to jupyterhub config folder.
#- name: initialize jupyterhub configuration
#  become: yes
#  become_user: root
#  shell: openssl req -x509 -newkey rsa:4096 -keyout jupyterhub_key.pem -out jupyterhub_cert.pem -days 3650 -nodes
#  args:
#    chdir: "{{jupyterhub_config_folder}}"

#- name: copy private key
#  become: yes
#  become_user: root
#  copy:
#    src: /etc/ssl/private/ssl-cert-snakeoil.key
#    dest: "{{jupyterhub_config_folder}}/jupyterhub_key.pem"

#- name: copy public certificate
#  become: yes
#  become_user: root
#  copy:
#    src: /etc/ssl/certs/ssl-cert-snakeoil.pem
#    dest: "{{jupyterhub_config_folder}}/jupyterhub_cert.pem"

# generate OpenSSL private key.
- name: Generate an OpenSSL private key.
  become: yes
  become_user: root
  openssl_privatekey:
    path: "{{ jupyterhub_config_folder }}/jupyterhub_key.pem"
  when: jupyterhub_ssl_certificate_path == "" and jupyterhub_ssl_private_key_path == ""

# create certificate signing request (CSR)
- name: Generate an OpenSSL CSR.
  become: yes
  become_user: root
  openssl_csr:
    path: "{{ jupyterhub_config_folder }}/jupyterhub.csr"
    privatekey_path: "{{ jupyterhub_config_folder }}/jupyterhub_key.pem"
    common_name: "{{ server_name }}"
  when: jupyterhub_ssl_certificate_path == "" and jupyterhub_ssl_private_key_path == ""

# generate certificate
- name: Generate a Self-Signed OpenSSL certificate.
  become: yes
  become_user: root
  openssl_certificate:
    path: "{{ jupyterhub_config_folder }}/jupyterhub_cert.pem"
    privatekey_path: "{{ jupyterhub_config_folder }}/jupyterhub_key.pem"
    csr_path: "{{ jupyterhub_config_folder }}/jupyterhub.csr"
    provider: selfsigned
  when: jupyterhub_ssl_certificate_path == "" and jupyterhub_ssl_private_key_path == ""

# add certificate to jupyterhub config.
- name: add certificate to jupyterhub config.
  become: yes
  become_user: root
  lineinfile:
    path: '{{jupyterhub_config_folder}}/jupyterhub_config.py'
    line: "c.JupyterHub.ssl_cert = '{{jupyterhub_config_folder}}/jupyterhub_cert.pem'"
  when: jupyterhub_ssl_certificate_path == "" and jupyterhub_ssl_private_key_path == ""

# add private key to jupyterhub configuration.
- name: Add private key to jupyterhub configuration.
  become: yes
  become_user: root
  lineinfile:
    path: '{{jupyterhub_config_folder}}/jupyterhub_config.py'
    line: "c.JupyterHub.ssl_key = '{{jupyterhub_config_folder}}/jupyterhub_key.pem'"
  when: jupyterhub_ssl_certificate_path == "" and jupyterhub_ssl_private_key_path == ""
