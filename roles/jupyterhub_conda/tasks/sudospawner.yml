#------------------------------------------------------------------------------#
# ==> sudospawner

# from https://jupyterhub.readthedocs.io/en/stable/reference/config-sudo.html

# create group ( {{ jupyterhub_user_group }} ) of which users will have to be a member to use jupyterhub
- name: Ensure group {{ jupyterhub_user_group }} exists
  become: yes
  become_user: root
  group:
    name: "{{ jupyterhub_user_group }}"
    state: present
  when: jupyterhub_spawner == "sudospawner"

# create run user's group ( {{jupyterhub_run_user_group}} )
- name: create run user's group ( {{ jupyterhub_run_user_group }} )
  become: yes
  become_user: root
  group:
    name: "{{ jupyterhub_run_user_group }}"
    state: present
  when: jupyterhub_spawner == "sudospawner"

# create user that will run jupyterhub ( {{ jupyterhub_run_user }} )
- name: Add the user '{{ jupyterhub_run_user }}' with primary group of '{{ jupyterhub_run_user_group }}'
  become: yes
  become_user: root
  user:
    name: "{{ jupyterhub_run_user }}"
    comment: Jupyterhub run user
    group: "{{ jupyterhub_run_user_group }}"
  when: jupyterhub_spawner == "sudospawner"

# change ownership of {{ jupyterhub_home_folder }} and all children to {{ jupyterhub_run_user }}:{{ jupyterhub_run_user_group }}
- name: change ownership of {{ jupyterhub_home_folder }} and all children to {{ jupyterhub_run_user }}:{{ jupyterhub_run_user_group }}
  become: yes
  become_user: root
  file:
    dest: "{{ jupyterhub_home_folder }}"
    owner: "{{ jupyterhub_run_user }}"
    group: "{{ jupyterhub_run_user_group }}"
    recurse: yes
  when: jupyterhub_spawner == "sudospawner"

# add jupyterhub sudoer file to /etc/sudoers.d:
- name:  Create jupyterhub sudoer file in /etc/sudoers.d
  become: yes
  become_user: root
  template:
    src: jupyterhub_sudoers.j2
    dest: /etc/sudoers.d/jupyterhub
    validate: 'visudo -cf %s'
    mode: 0440
  when: jupyterhub_spawner == "sudospawner"
# based on https://www.reddit.com/r/ansible/comments/5xzj8b/how_to_modify_sudoers_file_with_ansible/

# set jupyterhub spawner to sudospawner
- name: configure jupyterhub to use sudospawner.
  become: yes
  become_user: root
  lineinfile:
    path: '{{jupyterhub_config_folder}}/jupyterhub_config.py'
    line: "c.JupyterHub.spawner_class = 'sudospawner.SudoSpawner'"
  when: jupyterhub_spawner == "sudospawner"

#------------------------------------------------------------------------------#
# PAM support: add shadow group and let {{ jupyterhub_run_user }} access /etc/shadow...

#$ sudo groupadd shadow
- name: Ensure group "shadow" exists
  become: yes
  become_user: root
  group:
    name: shadow
    state: present
  when: jupyterhub_spawner == "sudospawner"

#$ sudo chgrp shadow /etc/shadow
#$ sudo chmod g+r /etc/shadow
- name: Create a directory if it does not exist
  become: yes
  become_user: root
  file:
    path: /etc/shadow
    state: file
    mode: '0640'
    group: shadow
  when: jupyterhub_spawner == "sudospawner"

#$ sudo usermod -a -G shadow {{ jupyterhub_run_user }}
- name: adding existing user '{{ jupyterhub_run_user }}' to group shadow
  become: yes
  become_user: root
  user:
    name: '{{ jupyterhub_run_user }}'
    groups: shadow
    append: yes
  when: jupyterhub_spawner == "sudospawner"
